apply plugin: 'com.android.library'

android {
    compileSdkVersion 33
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    libraryVariants.all { variant ->
        variant.outputs.all { output ->
            def formattedTime = getFormattedTime()
            outputFileName = "${project.name}-${variant.name}_${formattedTime}.aar"
        }
    }
}

/*//将源码打包  为了保证引入的aar  包可以查看源码
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}
//包含文档和源码的aar
artifacts {
    archives androidSourcesJar
}*/

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'com.hjq:toast:8.0'
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'com.google.code.gson:gson:2.8.0'
//    implementation 'com.android.support:recyclerview-v7:28.0.0'
//    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/logging-interceptor
//    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.11'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.okio:okio:3.0.0-alpha.10'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

}